<?xml version="1.0" encoding="UTF-8"?>
<project name="Evolution7BugsnagBundle" default="build">
    <target name="build" depends="prepare,composer,vendors,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdoc,phpunit,phpcb"/>

    <target name="build-parallel" depends="prepare,lint,tools-parallel,phpunit,phpcb"/>

    <target name="tools-parallel" description="Run tools in parallel">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd-ci"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs-ci"/>
            <antcall target="phploc"/>
            <antcall target="phpdoc"/>
        </parallel>
    </target>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/code-browser"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/code-browser"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
        <mkdir dir="${basedir}/build/phpdoc"/>
    </target>

    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="php" failonerror="true">
            <arg value="-l" />

            <fileset dir="${basedir}">
                <include name="**/*.php" />
                <exclude name="**/vendor/**" />
                <modified />
            </fileset>

        </apply>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg value="--log-csv" />
            <arg value="${basedir}/build/logs/phploc.csv" />
            <arg value="--exclude" />
            <arg value="${basedir}/vendor" />
            <arg value="--exclude" />
            <arg value="${basedir}/Tests" />
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
            <arg value="--ignore=${basedir}/vendor,${basedir}/Tests" />
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpmd">
            <arg path="${basedir}" />
            <arg value="text" />
            <arg value="/var/lib/jenkins/ev7config/PHPMD/symfony2-pmd.xml" />
            <arg value="--exclude" />
                        <arg value="${basedir}/vendor,${basedir}/Tests"/>
        </exec>
    </target>

    <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="phpmd">
            <arg path="${basedir}" />
            <arg value="xml" />
            <arg value="/var/lib/jenkins/ev7config/PHPMD/symfony2-pmd.xml" />
            <arg value="--reportfile" />
            <arg value="${basedir}/build/logs/pmd.xml" />
            <arg value="--exclude" />
            <arg value="${basedir}/vendor,${basedir}/Tests"/>
        </exec>
    </target>

    <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpcs">
            <arg value="--standard=Symfony2" />
            <arg value="--ignore=${basedir}/vendor,${basedir}/Tests"/>
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="phpcs" output="/dev/null">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
            <arg value="--standard=Symfony2" />
            <arg value="--ignore=${basedir}/vendor,${basedir}/Tests"/>
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd">
            <arg value="--log-pmd" />
            <arg value="${basedir}/build/logs/pmd-cpd.xml" />
            <arg value="--exclude" />
            <arg value="${basedir}/vendor" />
            <arg value="--exclude" />
            <arg value="${basedir}/Tests" />
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="phpdoc" description="Generate API documentation using phpDocumentor">
        <exec executable="phpdoc">
            <arg value="--directory=${basedir}" />
            <arg value="--title=Evolution7BugsnagBundle" />
            <arg value="--config=/var/lib/jenkins/ev7config/PHPDOC/phpdoc.dist.xml" />
            <arg value="--target=${basedir}/build/api" />
            <arg value="--ignore=vendor/*" />
        </exec>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="phpunit" failonerror="true">
            <arg value="-c" />
            <arg path="${basedir}/phpunit.xml.dist" />
        </exec>
    </target>

    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
            <arg value="--log" />
            <arg path="${basedir}/app/build/logs" />
            <arg value="--source" />
            <arg path="${basedir}" />
            <arg value="--output" />
            <arg value="--ignore=${basedir}/vendor,${basedir}/Tests"/>(
            <arg path="${basedir}/build/code-browser" />
        </exec>
    </target>

    <target name="composer" description="Install composer.phar">
        <exec executable="bash">
            <arg value="-c"/>
            <arg value="curl -s http://getcomposer.org/installer | php"/>
        </exec>
    </target>

    <target name="vendors" description="Install vendors">
        <exec executable="${basedir}/composer.phar" failonerror="true">
            <arg value="install" />
        </exec>
    </target>
</project>